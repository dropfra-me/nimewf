name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:

jobs:
  linux:
    name: Linux (Ubuntu) Nim ${{ matrix.nim }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        nim: [ '2.x' ]
    steps:
      - uses: actions/checkout@v4
      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y libewf-dev libssl-dev pkg-config build-essential flex bison byacc
      - name: Cache nimble
        id: cache-nimble
        uses: actions/cache@v4
        with:
          path: ~/.nimble
          key: ${{ runner.os }}-nimble-${{ hashFiles('*.nimble') }}
          restore-keys: |
            ${{ runner.os }}-nimble-
      - name: Setup Nim
        uses: jiro4989/setup-nim-action@v2
        with:
          nim-version: ${{ matrix.nim }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Test
        run: nimble test -y

  macos:
    name: macOS Nim ${{ matrix.nim }}
    runs-on: macos-latest
    strategy:
      matrix:
        nim: [ '2.x' ]
    steps:
      - uses: actions/checkout@v4
      - name: Install system deps
        run: |
          brew update
          brew install libewf openssl@3 pkg-config flex bison byacc
      - name: Cache nimble
        id: cache-nimble
        uses: actions/cache@v4
        with:
          path: ~/.nimble
          key: ${{ runner.os }}-nimble-${{ hashFiles('*.nimble') }}
          restore-keys: |
            ${{ runner.os }}-nimble-
      - name: Setup Nim
        uses: jiro4989/setup-nim-action@v2
        with:
          nim-version: ${{ matrix.nim }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Test
        run: nimble test -y

  windows:
    name: Windows Nim ${{ matrix.nim }}
    runs-on: windows-latest
    strategy:
      matrix:
        nim: [ '2.x' ]
    steps:
      - uses: actions/checkout@v4
      - name: Setup MSYS2 with packages
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            pkg-config
            mingw-w64-x86_64-pkgconf
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-openssl
            mingw-w64-x86_64-zlib
            mingw-w64-x86_64-bzip2
            mingw-w64-x86_64-gettext
            m4
            flex
            bison
            autoconf
            automake
            libtool
            make
            git
          msystem: MINGW64
      - name: Setup Nim
        uses: jiro4989/setup-nim-action@v2
        with:
          nim-version: ${{ matrix.nim }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Export Nim bin to PATH for MSYS2 steps
        shell: pwsh
        run: |
          $nimBin = "$env:GITHUB_WORKSPACE\.nim_runtime\bin"
          echo "NIM_BIN=$nimBin" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      - name: Build libewf from source (MSYS2)
        shell: msys2 {0}
        run: |
          set -euxo pipefail
          export PATH="$(cygpath -u "$NIM_BIN"):$PATH"
          echo "PATH=$PATH"
          which pkg-config || true
          pkg-config --version || true
          git clone --depth 1 https://github.com/libyal/libewf.git
          cd libewf
          ./synclibs.sh || true
          ./autogen.sh
          mkdir -p "$PWD/../libewf-prefix"
          ./configure --host=x86_64-w64-mingw32 --enable-winapi=yes --enable-static --disable-shared --prefix="$PWD/../libewf-prefix" CFLAGS="-DWINVER=0x0601" YACC="bison -y" LEX=flex
          make -j2
          make install
          echo "PKG_CONFIG_PATH=$PWD/../libewf-prefix/lib/pkgconfig" >> $GITHUB_ENV
      - name: Show tool versions
        shell: msys2 {0}
        run: |
          export PATH="$(cygpath -u "$NIM_BIN"):$PATH"
          export PKG_CONFIG_PATH="$(cygpath -u "$GITHUB_WORKSPACE")/libewf-prefix/lib/pkgconfig:$PKG_CONFIG_PATH"
          which nim || true
          which nimble || true
          which pkg-config || true
          pkg-config --libs libewf || true
          pkg-config --libs openssl || true
      - name: Test
        shell: msys2 {0}
        run: |
          export PATH="$(cygpath -u "$NIM_BIN"):$PATH"
          export PKG_CONFIG_PATH="$(cygpath -u "$GITHUB_WORKSPACE")/libewf-prefix/lib/pkgconfig:$PKG_CONFIG_PATH"
          nimble test -y
